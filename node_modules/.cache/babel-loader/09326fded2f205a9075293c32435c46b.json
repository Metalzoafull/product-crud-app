{"ast":null,"code":"var _jsxFileName = \"/home/nico/visual studio/nuevo/product-crud-app/src/component/Products.js\";\n//import React = require(\"react\");\nimport React, { Component } from 'react';\nimport { ProductService } from \"../service/ProductService\";\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Panel } from 'primereact/panel';\nimport { Button } from 'primereact/button';\nimport { classNames } from 'primereact/utils';\nimport { InputText } from 'primereact/inputtext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Products extends Component {\n  constructor() {\n    super();\n    this.state = {\n      first1: 0,\n      rows1: 4\n    };\n    this.productService = new ProductService();\n    this.onCustomPage1 = this.onCustomPage1.bind(this);\n    this.onPageInputKeyDown = this.onPageInputKeyDown.bind(this);\n    this.onPageInputChange = this.onPageInputChange.bind(this);\n  }\n\n  onCustomPage1(event) {\n    this.setState({\n      first1: event.first,\n      rows1: event.rows,\n      currentPage: event.page + 1\n    });\n  }\n\n  onPageInputKeyDown(event, options) {\n    if (event.key === 'Enter') {\n      const page = parseInt(this.state.currentPage);\n\n      if (page < 0 || page > options.totalPages) {\n        this.setState({\n          pageInputTooltip: `Value must be between 1 and ${options.totalPages}.`\n        });\n      } else {\n        const first = this.state.currentPage ? options.rows * (page - 1) : 0;\n        this.setState({\n          first1: first,\n          pageInputTooltip: 'Press \\'Enter\\' key to go to this page.'\n        });\n      }\n    }\n  }\n\n  onPageInputChange(event) {\n    this.setState({\n      currentPage: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    this.productService.getAll().then(data => this.setState({\n      product: data\n    })); //this.productService.getAll().then(data => this.setProducto({product: data}))\n  }\n\n  render() {\n    const template1 = {\n      layout: 'PrevPageLink PageLinks NextPageLink CurrentPageReport',\n      'PrevPageLink': options => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Previous\",\n          className: \"p-button-raised p-button-secondary\",\n          onClick: options.onClick,\n          disabled: options.disabled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this);\n      },\n      'NextPageLink': options => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Next\",\n          className: \"p-button-raised p-button-secondary\",\n          onClick: options.onClick,\n          disabled: options.disabled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this);\n      },\n      'PageLinks': options => {\n        if (options.view.startPage === options.page && options.view.startPage !== 0 || options.view.endPage === options.page && options.page + 1 !== options.totalPages) {\n          const className = classNames(options.className, {\n            'p-disabled': true\n          });\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            className: className,\n            style: {\n              userSelect: 'none'\n            },\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 28\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(Button, {\n          label: options.page + 1,\n          className: options.className,\n          onClick: options.onClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this);\n      }\n      /*,\n      'CurrentPageReport': (options) => {\n         return (\n             <span className=\"p-mx-3\" style={{ color: 'var(--text-color)', userSelect: 'none' }}>\n                 Go to <InputText size=\"2\" className=\"p-ml-1\" value={this.state.currentPage} tooltip={this.state.pageInputTooltip}\n                     onKeyDown={(e) => this.onPageInputKeyDown(e, options)} onChange={this.onPageInputChange}/>\n             </span>\n         )\n      }*/\n\n    };\n    return /*#__PURE__*/_jsxDEV(Panel, {\n      header: \"Product CRUD App\",\n      style: {\n        width: '80%',\n        margin: '0 auto',\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        value: this.state.product,\n        paginator: true,\n        paginatorTemplate: template1,\n        first: this.state.first1,\n        rows: this.state.rows1,\n        onPage: this.onCustomPage1,\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          field: \"name\",\n          header: \"NAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"productType\",\n          header: \"PRODUCTTYPE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          field: \"image\",\n          header: \"IMAGE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/nico/visual studio/nuevo/product-crud-app/src/component/Products.js"],"names":["React","Component","ProductService","DataTable","Column","Panel","Button","classNames","InputText","Products","constructor","state","first1","rows1","productService","onCustomPage1","bind","onPageInputKeyDown","onPageInputChange","event","setState","first","rows","currentPage","page","options","key","parseInt","totalPages","pageInputTooltip","target","value","componentDidMount","getAll","then","data","product","render","template1","layout","onClick","disabled","view","startPage","endPage","className","userSelect","width","margin","marginTop"],"mappings":"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","sourcesContent":["//import React = require(\"react\");\nimport React, { Component } from 'react';\nimport { ProductService } from \"../service/ProductService\";\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Panel } from 'primereact/panel';\nimport { Button } from 'primereact/button';\nimport { classNames } from 'primereact/utils';\nimport { InputText } from 'primereact/inputtext';\n\n\nexport default class Products extends Component {\n    constructor() {\n        super();\n        this.state = {\n            first1: 0,\n            rows1: 4\n        };\n        this.productService = new ProductService();\n        this.onCustomPage1 = this.onCustomPage1.bind(this);\n        this.onPageInputKeyDown = this.onPageInputKeyDown.bind(this);\n        this.onPageInputChange = this.onPageInputChange.bind(this);\n\n    };\n\n    onCustomPage1(event) {\n        this.setState({\n            first1: event.first,\n            rows1: event.rows,\n            currentPage: event.page + 1\n        });\n    }\n\n    onPageInputKeyDown(event, options) {\n        if (event.key === 'Enter') {\n            const page = parseInt(this.state.currentPage);\n            if (page < 0 || page > options.totalPages) {\n                this.setState({ pageInputTooltip: `Value must be between 1 and ${options.totalPages}.`})\n            }\n            else {\n                const first = this.state.currentPage ? options.rows * (page - 1) : 0;\n\n                this.setState({ first1: first, pageInputTooltip: 'Press \\'Enter\\' key to go to this page.' });\n            }\n        }\n    }\n\n    onPageInputChange(event) {\n        this.setState({ currentPage: event.target.value });\n    }\n\n    componentDidMount() {\n        this.productService.getAll().then(data => this.setState({ product: data }))\n        //this.productService.getAll().then(data => this.setProducto({product: data}))\n    };\n\n    render() {\n        const template1 = {\n            layout: 'PrevPageLink PageLinks NextPageLink CurrentPageReport',\n            'PrevPageLink': (options) => {\n                return (\n                    <Button label=\"Previous\" className=\"p-button-raised p-button-secondary\" onClick={options.onClick} disabled={options.disabled}/>\n                )\n            },\n            'NextPageLink': (options) => {\n                return (\n                    <Button label=\"Next\" className=\"p-button-raised p-button-secondary\" onClick={options.onClick} disabled={options.disabled}/>\n                )\n            },\n            'PageLinks': (options) => {\n                if ((options.view.startPage === options.page && options.view.startPage !== 0) || (options.view.endPage === options.page && options.page + 1 !== options.totalPages)) {\n                    const className = classNames(options.className, { 'p-disabled': true });\n                    return <span className={className} style={{ userSelect: 'none' }}>...</span>;\n                }\n\n                return (\n                    <Button label={options.page + 1} className={options.className} onClick={options.onClick}/>\n                )\n            }/*,\n            'CurrentPageReport': (options) => {\n                return (\n                    <span className=\"p-mx-3\" style={{ color: 'var(--text-color)', userSelect: 'none' }}>\n                        Go to <InputText size=\"2\" className=\"p-ml-1\" value={this.state.currentPage} tooltip={this.state.pageInputTooltip}\n                            onKeyDown={(e) => this.onPageInputKeyDown(e, options)} onChange={this.onPageInputChange}/>\n                    </span>\n                )\n            }*/\n        };\n        return (\n            <Panel header=\"Product CRUD App\" style={{width:'80%', margin: '0 auto', marginTop: '20px'}}>\n                <DataTable value={this.state.product} paginator paginatorTemplate={template1} first={this.state.first1} rows={this.state.rows1} onPage={this.onCustomPage1}>\n                    <Column field=\"name\" header=\"NAME\"></Column>\n                    <Column field=\"productType\" header=\"PRODUCTTYPE\"></Column>\n                    <Column field=\"image\" header=\"IMAGE\"></Column>\n                </DataTable>\n            </Panel>\n\n        );\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}